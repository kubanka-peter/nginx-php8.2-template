version: '3.7'
services:
    reverse-proxy:
        image: traefik:v2.9
        command:
            - "--entrypoints.web.address=:80"
            - "--entrypoints.web-secure.address=:443"
            - "--entrypoints.web.http.redirections.entrypoint.to=web-secure"
            - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
            - "--providers.docker"
            - "--providers.file.directory=/configuration/"
            - "--providers.file.watch=true"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "./traefik_config/:/configuration/"
            - "./certs/:/certs/"

    project:
        build:
            context: ..
            target: dev
        labels:
            - traefik.enable=true
            - traefik.http.routers.project.rule=Host(`project.${DOMAIN}`)
            - traefik.http.routers.project.entrypoints=web-secure
            - traefik.http.routers.project.service=project-service
            - traefik.http.services.project-service.loadbalancer.server.port=80
            - traefik.http.routers.project.tls=true

        volumes:
            - "./../:/var/www/project/"

    # after ./build, you can test prod image
#    project-prod:
#        image: project:latest
#        labels:
#            - traefik.enable=true
#            - traefik.http.routers.project-prod.rule=Host(`project-prod.${DOMAIN}`)
#            - traefik.http.routers.project-prod.entrypoints=web-secure
#            - traefik.http.routers.project-prod.service=project-prod-service
#            - traefik.http.services.project-prod-service.loadbalancer.server.port=80
#            - traefik.http.routers.project-prod.tls=true